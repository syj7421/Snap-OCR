name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller py2app

    - name: Build executable
      run: |
        if [ $RUNNER_OS == 'Windows' ]; then
          pyinstaller --onefile main.py
        elif [ $RUNNER_OS == 'macOS' ]; then
          python setup.py py2app
        elif [ $RUNNER_OS == 'Linux' ]; then
          pyinstaller --onefile main.py
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-executable
        path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.os }}-executable
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*  # Ensure this path matches where your executables are stored
        asset_name: ${{ matrix.os }}-executable  # Give a meaningful name to your artifacts
        asset_content_type: application/octet-stream
